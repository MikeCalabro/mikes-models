---
title: "Simple Models"
author: "Mike Calabro"
format: html
editor: visual
execute:
  warning: FALSE
  message: FALSE
---

## Set Up

```{r}

library(tidyverse)
library(janitor)
library(tidymodels)
library(rpart.plot)
library(discrim)

set.seed(80)
 
train <- read_csv('train.csv') %>% 
  clean_names() %>%
  mutate(survived = factor(survived),
         pclass = factor(pclass))

folds <- vfold_cv(train, v = 10)
```

## Decision Tree Model Workflow

```{r}

tree_spec <-
  decision_tree(min_n = 20) %>%
  set_engine('rpart') %>%
  set_mode('classification')

tree_recipe <- 
  recipe(survived ~ pclass + sex + age + embarked, data = train)

tree_workflow <-
  workflow() %>%
  add_model(tree_spec) %>%
  add_recipe(tree_recipe)

keep_pred <- control_resamples(save_pred = TRUE, save_workflow = TRUE)

tree_res <- 
  tree_workflow %>% fit_resamples(resamples = folds, control = keep_pred)

```

### Collecting the Metrics

```{r}

collect_metrics(tree_res)
```

## Naive Bayes Model Workflow

```{r}

bayes_spec <-
  naive_Bayes(Laplace = 1) %>%
  set_engine('naivebayes')
  

bayes_recipe <- 
  recipe(survived ~ pclass + sex + age + embarked, data = train) %>%
  step_impute_mode(embarked) %>%
  step_dummy(all_nominal_predictors()) %>%
  step_normalize(all_numeric_predictors())

bayes_workflow <-
  workflow() %>%
  add_model(bayes_spec) %>%
  add_recipe(bayes_recipe)

bayes_res <- 
  bayes_workflow %>% fit_resamples(resamples = folds, control = keep_pred)
```

### Collecting the Metrics

```{r}
bayes_res %>% collect_metrics()
```

## K-Nearest Neighbors Model Workflow

```{r}

knn_spec <-
  nearest_neighbor(neighbors = 21) %>%
  set_engine('kknn') %>%
  set_mode('classification')
  

knn_recipe <- 
  recipe(survived ~ pclass + sex + age + embarked, data = train) %>%
  step_impute_mean(age) %>%
  step_impute_mode(embarked) %>%
  step_dummy(all_nominal_predictors()) %>%
  step_normalize(all_numeric_predictors())

knn_workflow <-
  workflow() %>%
  add_model(knn_spec) %>%
  add_recipe(knn_recipe)

knn_res <- 
  knn_workflow %>% fit_resamples(resamples = folds, control = keep_pred)
```

### Collecting the Metrics

```{r}
knn_res %>% collect_metrics()
```

## Logistic Model Workflow

```{r}

glm_spec <-
  logistic_reg() %>%
  set_engine('glm')
  

glm_recipe <- 
  recipe(survived ~ pclass + sex + age + embarked, data = train) %>%
  step_impute_mean(age) %>%
  step_impute_mode(embarked) %>%
  step_dummy(all_nominal_predictors())

glm_workflow <-
  workflow() %>%
  add_model(glm_spec) %>%
  add_recipe(glm_recipe)

glm_res <- 
  glm_workflow %>% fit_resamples(resamples = folds, control = keep_pred)
```

### Collecting the Metrics

```{r}
glm_res %>% collect_metrics()
```

## Random Forest Model Workflow

```{r}

forest_spec <- 
  rand_forest(mtry = 2, min_n = 10) %>%
  set_engine('ranger') %>%
  set_mode('classification')

forest_recipe <- 
  recipe(survived ~ pclass + sex + age + embarked, data = train) %>%
  step_impute_mean(age) %>%
  step_impute_mode(embarked)

forest_workflow <-
  workflow() %>%
  add_model(forest_spec) %>%
  add_recipe(forest_recipe)

forest_res <- 
  forest_workflow %>% fit_resamples(resamples = folds, control = keep_pred)
```

### Collecting the Metrics

```{r}
forest_res %>% collect_metrics()
```
